/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */
options
{
  static = true;
}

PARSER_BEGIN(logo_parser)

public class logo_parser
{
  public static void main(String args []) throws ParseException
  {
    logo_parser parser = new logo_parser(System.in);
    System.out.println("Reading from standard input...");
    System.out.print("Enter a valid Logo code :");
    try
    {
      program();
      System.out.println("OK");
    }
    catch (Exception e)
    {
      System.out.println("NOK.");
      System.out.println(e.getMessage());
      logo_parser.ReInit(System.in);
    }
    catch (Error e)
    {
      System.out.println("Oops.");
      System.out.println(e.getMessage());
    }
  }
}

PARSER_END(logo_parser)

SKIP :
{
  " "
| "\r"
| "\t"
| "\n"
}


TOKEN :
{
  < CONSTANT : (< DIGIT >)+ >
| < #DIGIT : [ "0"-"9" ] >
| < PRIMITIVE : ("AV" | "TD") >
| < FUNCTION : ([ "a"-"z" ])+ ([ "a"-"z"] | ["0" - "9"])* >
}

void program() :
{}
{
  (command())* < EOF >
}

void command() :
{}
{
  (
    "POUR" <  FUNCTION > (instruction())+ "FIN"
	|  instruction()
  )
}

void instruction() :
{}
{
  <  PRIMITIVE > element()
  {
    System.err.println("Instruction");
  }
}


void element() :
{}
{
  < CONSTANT >
}
